#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define NUMBER  1
#define FN  2
#define HOTKEY  3

&mt {
    tapping-term-ms = <190>;
    quick-tap-ms = <130>;
    flavor = "tap-preferred";
    hold-trigger-on-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <4 5>; // KP: VB
            bindings = <&mt RBRC LBRC>;
            layers = <0 1 2 3 4 5>;
        };

        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <6 7>; // KP: NM
            bindings = <&kp RBRC>;
            layers = <0 1 2 3 4 5>;
        };

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <16 17>; // KP: FG
            bindings = <&mt RPAR LPAR>;
            layers = <0 1 2 3 4 5>;
        };

        combo_rpar {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp RPAR>;
            layers = <0 1 2 3 4 5>;
        };

        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <28 29>; // KP: RT
            bindings = <&mt RBKT LBKT>;  // 可以用CMD+这个单手返回到代码上一个编辑的地方 或者网页返回
            layers = <0 1 2 3 4 5>;
        };

        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <30 31>; // KP: YU
            bindings = <&kp RBKT>;
            layers = <0 1 2 3 4 5>;
        };

        esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>; // ESC
            layers = <0>;
        };

        up {
            bindings = <&kp UP>;
            key-positions = <3 4>;
            layers = <0>;
            timeout-ms = <50>;
        };

        down {
            bindings = <&kp DOWN>;
            key-positions = <27 28>;
            timeout-ms = <50>;
            layers = <0>;
        };

        left {
            bindings = <&kp LEFT>;
            key-positions = <14 15>;
            layers = <0>;
            timeout-ms = <50>;
        };

        right {
            bindings = <&kp RIGHT>;
            key-positions = <15 16>;
            layers = <0>;
            timeout-ms = <50>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <130>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41 39>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <130>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
&lt 2 TAB     &kp Q  &kp W  &kp E      &kp R  &kp T  &kp Y          &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&kp CAPSLOCK  &kp A  &kp S  &kp D      &kp F  &kp G  &kp H          &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &kp Z  &kp X  &kp C      &kp V  &kp B  &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                            &mkp RCLK  &mo 2  &mo 1  &kp BACKSPACE  &kp SPACE  &mkp LCLK
            >;
        };

        number_layer {
            label = "NUMBER";
            bindings = <
&kp F1     &kp F2                    &kp F3                &kp F4             &kp F5               &kp F6          &kp F7              &kp F8            &kp F9           &kp F10                  &kp F11                   &kp F12
&none      &mt EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2  &mt HASH NUMBER_3  &mt DOLLAR NUMBER_4  &mt PERCENT N5  &mt CARET NUMBER_6  &mt AMPERSAND N7  &mt ASTERISK N8  &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &kp PLUS
&kp LSHFT  &mkp MCLK                 &kp C_VOL_DN          &kp C_VOL_UP       &none                &none           &none               &none             &none            &none                    &none                     &kp KP_DOT
                                                           &none              &none                &none           &none               &none             &none
            >;
        };

        fn_layer {
            label = "FN";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &kp F10  &kp F11  &kp F12  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&sys_reset    &none         &kp F7   &kp F8   &kp F9   &out OUT_USB  &out OUT_USB  &none         &none         &none         &none         &sys_reset
&none         &none         &kp F4   &kp F5   &kp F6   &out OUT_BLE  &out OUT_BLE  &none         &none         &none         &none         &none
                                     &kp F1   &kp F2   &kp F3        &none         &none         &none
            >;
        };

        hotkey_layer {
            label = "HOTKEY";
            bindings = <
&none  &none  &none     &kp UP    &none      &none  &none  &none     &kp UP    &none      &none  &none
&none  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
&none  &none  &none     &none     &none      &none  &none  &none     &none     &none      &none  &none
                        &none     &none      &none  &none  &none     &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
